package org.example.cnjava_milkteastore.TestData;


import com.fasterxml.jackson.core.type.TypeReference;
import org.example.cnjava_milkteastore.frontend.swingworker.ApiWorker;
import org.example.cnjava_milkteastore.backend.product.dto.ProductDTO;
import org.example.cnjava_milkteastore.backend.product.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

@Component
public class ProductData {
    @Autowired
    ProductService productService;




    public void insertMock100Products() {
        List<ProductDTO> products = new ArrayList<>();

        String[] categories = {
                "Tr√† S·ªØa","ƒê·ªì ng·ªçt","Recommend","Best Seller","Tr√† Tr√°i C√¢y", "N∆∞·ªõc √âp", "Topping", "B√°nh Ng·ªçt", "Combo", "C√† Ph√™", "Sinh T·ªë", "S·ªØa Chua", "Soda"
        };

        String[] adjectives = {
                "Truy·ªÅn Th·ªëng", "ƒê·∫∑c Bi·ªát", "ƒê∆∞·ªùng ƒêen", "Matcha", "Xo√†i", "D√¢u", "Chanh Leo", "C√† Ph√™", "Socola", "B·∫°c H√†",
                "Nhi·ªát ƒê·ªõi", "Th·∫£o M·ªôc", "H·∫°nh Nh√¢n", "Kem Cheese", "Tr·ª©ng Mu·ªëi"
        };

        String[] baseNames = {
                "Tr√† S·ªØa", "Tr√† Tr√°i C√¢y", "N∆∞·ªõc √âp", "Pudding", "Th·∫°ch", "Tr√¢n Ch√¢u", "S·ªØa Chua", "Sinh T·ªë", "C√† Ph√™", "Soda"
        };

        String[] imageFilenames = {
                "trasua_truyenthong.jpg", "trasua_duongden.jpg", "trasua_matcha.jpg",
                "tradao_camsa.jpg", "travail_hatchia.jpg", "traxoai_nhietdoi.jpg",
                "tranchau_den.jpg", "thach_dua.jpg", "pudding_trung.jpg",
                "nuocep_cam.jpg", "nuocep_duahau.jpg",
                "banh_flan.jpg", "banhmi_bosua.jpg",
                "combo_ts_flan.jpg", "combo_tradao_tranchau.jpg"
        };

        Random random = new Random();

        for (int i = 1; i <= 100; i++) {
            String category = categories[random.nextInt(categories.length)];
            String base = baseNames[random.nextInt(baseNames.length)];
            String adj = adjectives[random.nextInt(adjectives.length)];

            String productName = base + " " + adj ;
            String image = imageFilenames[i % imageFilenames.length];

            int quantity = 20 + random.nextInt(200); // 20 -> 219
            float price = 15000f + random.nextInt(50) * 500; // 15000 -> 40000
            int point = 1 + random.nextInt(5); // 1 -> 5

            products.add(new ProductDTO(0, "", quantity, category, price, point, productName, image));
        }

        for (ProductDTO product : products) {
            productService.createOrUpdate(product);
            System.out.println("‚úîÔ∏è " + product.getProductName());
        }

        System.out.println("‚úÖ ƒê√£ th√™m 100 s·∫£n ph·∫©m m·∫´u v·ªõi t√™n v√† lo·∫°i ƒëa d·∫°ng!");
    }



    public void insertProduct() {

        List<ProductDTO> products = new ArrayList<>();

        products.add(new ProductDTO(0, "", 100, "Tr√† S·ªØa", 32000f, 3, "Tr√† S·ªØa Truy·ªÅn Th·ªëng", "trasua_truyenthong.jpg"));
        products.add(new ProductDTO(0, "", 80, "Tr√† S·ªØa", 35000f, 4, "Tr√† S·ªØa ƒê∆∞·ªùng ƒêen", "trasua_duongden.jpg"));
        products.add(new ProductDTO(0, "", 70, "Tr√† S·ªØa", 37000f, 4, "Tr√† S·ªØa Matcha", "trasua_matcha.jpg"));
        products.add(new ProductDTO(0, "", 60, "Tr√† Tr√°i C√¢y", 36000f, 4, "Tr√† ƒê√†o Cam S·∫£", "tradao_camsa.jpg"));
        products.add(new ProductDTO(0, "", 50, "Tr√† Tr√°i C√¢y", 34000f, 3, "Tr√† V·∫£i H·∫°t Chia", "travail_hatchia.jpg"));
        products.add(new ProductDTO(0, "", 55, "Tr√† Tr√°i C√¢y", 38000f, 4, "Tr√† Xo√†i Nhi·ªát ƒê·ªõi", "traxoai_nhietdoi.jpg"));
        products.add(new ProductDTO(0, "", 200, "Topping", 5000f, 1, "Tr√¢n Ch√¢u ƒêen", "tranchau_den.jpg"));
        products.add(new ProductDTO(0, "", 150, "Topping", 6000f, 1, "Th·∫°ch D·ª´a", "thach_dua.jpg"));
        products.add(new ProductDTO(0, "", 120, "Topping", 7000f, 1, "Pudding Tr·ª©ng", "pudding_trung.jpg"));
        products.add(new ProductDTO(0, "", 40, "N∆∞·ªõc √âp", 30000f, 2, "N∆∞·ªõc √âp Cam", "nuocep_cam.jpg"));
        products.add(new ProductDTO(0, "", 50, "N∆∞·ªõc √âp", 28000f, 2, "N∆∞·ªõc √âp D∆∞a H·∫•u", "nuocep_duahau.jpg"));
        products.add(new ProductDTO(0, "", 30, "B√°nh Ng·ªçt", 15000f, 1, "B√°nh Flan", "banh_flan.jpg"));
        products.add(new ProductDTO(0, "", 25, "B√°nh Ng·ªçt", 20000f, 1, "B√°nh M√¨ B∆° S·ªØa", "banhmi_bosua.jpg"));
        products.add(new ProductDTO(0, "", 20, "Combo", 45000f, 5, "Combo Tr√† S·ªØa + Flan", "combo_ts_flan.jpg"));
        products.add(new ProductDTO(0, "", 15, "Combo", 40000f, 5, "Combo Tr√† ƒê√†o + Tr√¢n Ch√¢u", "combo_tradao_tranchau.jpg"));

        for (ProductDTO product : products) {
            productService.createOrUpdate(product);
        }

    }
    public void fetchProductsFromApi() {
        String apiUrl = "http://localhost:8080/api/products";

        ApiWorker<List<ProductDTO>> worker = new ApiWorker<>(
                apiUrl,
                "GET",
                null,
                new TypeReference<>() {
                },
                products -> {
                    // onSuccess: x·ª≠ l√Ω danh s√°ch s·∫£n ph·∫©m
                    for (ProductDTO product : products) {
                        System.out.println("‚úîÔ∏è " + product.getProductName());
                        // B·ªá H·∫° c√≥ th·ªÉ th√™m v√†o b·∫£ng, danh s√°ch, UI t√πy √Ω
                    }
                },
                () -> {
                    // onStart: c√≥ th·ªÉ show loading
                    System.out.println("üîÑ ƒêang t·∫£i danh s√°ch s·∫£n ph·∫©m...");
                },
                () -> {
                    // onFinish: t·∫Øt loading
                    System.out.println("‚úÖ T·∫£i xong s·∫£n ph·∫©m!");
                },
                e -> {
                    System.err.println("‚ùå L·ªói khi g·ªçi API: " + e.getMessage());
                }
        );

        worker.execute(); // B·∫Øt ƒë·∫ßu ch·∫°y SwingWorker
    }

}


